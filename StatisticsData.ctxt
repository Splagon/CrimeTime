#BlueJ class context
comment0.target=StatisticsData
comment0.text=\n\ Calculates\ the\ data\ needed\ for\ the\ statistics\ viewer\n\n\ @author\ Charles\ Suddens-Spiers\ (K21040272),\ Michael\ Higham\ (K21051343),\ \n\ \ \ \ \ \ \ \ \ Matthew\ Palmer\ (K21005255),\ Aymen\ Berbache\ (K21074588).\n\ @version\ 29/03/22\n
comment1.params=
comment1.target=void\ initialiseHandler()
comment1.text=\n\ Used\ to\ initialise\ the\ values\ and\ allows\ for\ this\ to\ be\ done\n\ statically.\n
comment10.params=useListingsAtPrice
comment10.target=int\ getAveragePrice(boolean)
comment10.text=\n\ @param\ useListingsAtPrice\ If\ true,\ the\ average\ is\ of\ the\ listings\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ between\ the\ user-selected\ min\ and\ max\ price.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ false,\ the\ average\ is\ of\ all\ properties.\n\ @return\ int\ -\ the\ average\ price\ \n
comment11.params=boroughName\ noOfPropertiesStats
comment11.target=javafx.scene.effect.ColorAdjust\ getBoroughMapColour(java.lang.String,\ NoOfPropertiesStats)
comment11.text=\n\ Calculates\ how\ the\ colour\ of\ the\ hexagon\ should\ adjust\ dependendent\n\ on\ the\ number\ of\ properties\ within\ the\ respective\ borough\ and\ in\n\ respect\ to\ the\ other\ boroughs.\n\ \n\ @param\ boroughName\ The\ name\ of\ the\ respective\ borough\ to\ check\n\ @param\ noOfPropertiesStats\ The\ data\ container\ for\ the\ stats\ about\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ boroughs\ and\ the\ number\ of\ properties\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ within\ them.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ The\ colour\ adjust\ used\ to\ adjust\ the\ colour\ of\ the\ hexagon.\n
comment12.params=percentile
comment12.target=javafx.scene.effect.ColorAdjust\ getBoroughMapColour(int)
comment12.text=\n\ Calculates\ how\ the\ colour\ of\ the\ hexagon\ should\ adjust\ dependendent\n\ on\ the\ percentile\ passed\ in\ and\ an\ even\ distribution.\ This\ is\ used\n\ to\ make\ the\ key\ and\ automatically\ adjust\ the\ colour\ if\ the\ colour\ of\n\ the\ hexagons\ are\ changed\n
comment13.params=noOfPropertiesInBorough\ noOfPropertiesStats
comment13.target=javafx.scene.effect.ColorAdjust\ getColourAdjust(int,\ NoOfPropertiesStats)
comment13.text=\n\ Calculates\ how\ the\ colour\ of\ the\ hexagon\ should\ adjust\ dependendent\n\ on\ the\ number\ of\ properties\ within\ the\ respective\ borough\ and\ in\n\ respect\ to\ the\ other\ boroughs.\n\ \n\ @param\ noOfPropertiesInBorough\ The\ number\ of\ properties\ in\ the\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ respective\ borough.\n\ @param\ noOfPropertiesStats\ The\ data\ container\ for\ the\ stats\ about\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ boroughs\ and\ the\ number\ of\ properties\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ within\ them.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ The\ colour\ adjust\ used\ to\ adjust\ the\ colour\ of\ the\ hexagon.\n
comment14.params=minPrice\ maxPrice
comment14.target=java.util.ArrayList\ getSortedNumberOfPropertiesInBoroughs(int,\ int)
comment14.text=\n\ @param\ minPrice\ The\ user-selected\ minimum\ price.\n\ @param\ maxPrice\ The\ user-selected\ maximum\ price.\n\ \n\ @return\ An\ Arraylist\ of\ boroughs\ sorted\ by\ the\ number\ of\n\ \ \ \ \ \ \ \ \ properties\ in\ the\ borough.\n
comment15.params=useListingsAtPrice\ min\ max
comment15.target=java.lang.String\ getHighAvgReview(boolean,\ int,\ int)
comment15.text=\n\ Calculates\ the\ borough\ which\ has\ on\ average\ the\ highest\ number\ of\ reviews\n\ @param\ boolean\ useListingsAtPrice\ Determine\ whether\ the\ price\ selected\ will\ affect\ the\ statistic\n\ @param\ int\ min\ The\ minimum\ price\ selected\n\ @param\ int\ max\ The\ maximum\ price\ selected\n\ @return\ static\ String\ -\ the\ name\ of\ the\ borough\n
comment16.params=useListingsAtPrice
comment16.target=java.util.ArrayList\ determineList(boolean)
comment17.params=
comment17.target=void\ clear()
comment17.text=\n\ Used\ to\ clear\ the\ current\ values\ in\ the\ class\ and\ in\ the\ DataHandler.\n\ Only\ used\ for\ testing.\n
comment2.params=selectedMinPrice\ selectedMaxPrice
comment2.target=void\ setListingsAtPrice(int,\ int)
comment2.text=\n\ Used\ to\ produce\ a\ list\ of\ all\ properties\ between\ the\ minimum\n\ and\ maximum\ user-selected\ price.\n\ \n\ @param\ selectedMinPrice\ The\ minimum\ price\ selected\ by\ the\ user\n\ @param\ selectedMaxPrice\ The\ maximum\ price\ selected\ by\ the\ user\n
comment3.params=useListingsAtPrice
comment3.target=double\ getAverageNoReviews(boolean)
comment3.text=\n\ Produces\ a\ double\ conveying\ the\ average\ number\ of\ reviews\ according\ to\ \n\ the\ parameters.\n\ \n\ @param\ useListingsAtPrice\ If\ true,\ the\ average\ is\ of\ the\ listings\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ between\ the\ user-selected\ min\ and\ max\ price.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ false,\ the\ average\ is\ of\ all\ properties.\n\ @return\ average\ number\ of\ reviews\ per\ property.\ \n
comment4.params=useListingsAtPrice
comment4.target=int\ getNoHomeAndApartments(boolean)
comment4.text=\n\ Gets\ the\ total\ number\ of\ home\ and\ apartments\ according\ to\ the\ parameters.\n\ \n\ @param\ useListingsAtPrice\ If\ true,\ the\ total\ is\ of\ the\ listings\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ between\ the\ user-selected\ min\ and\ max\ price.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ false,\ the\ total\ is\ of\ all\ properties.\n\ @return\ The\ number\ of\ home\ and\ apartment\ airbnb\ properties\ \n
comment5.params=useListingsAtPrice
comment5.target=int\ getAvailableInfo(boolean)
comment5.text=\n\ Produces\ the\ number\ of\ properties\ currently\ available\ of\ the\ list\ of\ properties.\n\ \n\ @param\ useListingsAtPrice\ If\ true,\ the\ information\ is\ of\ the\ listings\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ between\ the\ user-selected\ min\ and\ max\ price.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ false,\ the\ information\ is\ of\ all\ properties.\n\ \n\ @return\ the\ number\ of\ available\ properties\n
comment6.params=useListingsAtPrice\ min\ max
comment6.target=java.lang.String\ getExpensiveInfo(boolean,\ int,\ int)
comment6.text=\n\ @param\ boolean\ useListingsAtPrice\ Determine\ whether\ the\ price\ selected\ will\ affect\ the\ statistic\n\ @param\ int\ min\ The\ minimum\ price\ selected\n\ @param\ int\ max\ The\ maximum\ price\ selected\n\ @return\ The\ name\ of\ the\ most\ expensive\ borough\n
comment7.params=useListingsAtPrice
comment7.target=double\ getPriceSDInfo(boolean)
comment7.text=\n\ Produces\ the\ standard\ deviation\ of\ the\ list\ of\ properties.\n\ \n\ @param\ useListingsAtPrice\ If\ true,\ the\ standard\ deviation\ is\ of\ the\ listings\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ between\ the\ user-selected\ min\ and\ max\ price.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ false,\ the\ standard\ deviation\ is\ of\ all\ properties.\n\ \n\ @return\ The\ standard\ deviation\ of\ price\ from\ all\ of\ the\ airbnb\ properties\n
comment8.params=
comment8.target=java.util.HashMap\ getAveragePricePerBorough()
comment8.text=\n\ @return\ A\ hashmap\ containing\ the\ average\ price\ per\ night\ in\ each\ borough\n
comment9.params=
comment9.target=java.util.HashMap\ getAverageReviewsPerBorough()
comment9.text=\n\ @return\ A\ hashmap\ containing\ the\ average\ reviews\ per\ each\ borough\n
numComments=18
