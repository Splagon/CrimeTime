#BlueJ class context
comment0.target=MainViewer
comment0.text=\n\ The\ MainViewer\ is\ one\ of\ three\ major\ windows\ of\ the\ application.\ The\ MainViewer\n\ contains\ the\ main\ panels\ involved\ in\ the\ project\ and\ is\ first\ window\ to\ be\ shown\n\ to\ the\ user.\ Consequently,\ it\ is\ also\ used\ to\ access\ the\ other\ windows.\n\n\ @author\ Charles\ Suddens-Spiers\ (K21040272),\ Michael\ Higham\ (K21051343),\ \n\ \ \ \ \ \ \ \ \ Matthew\ Palmer\ (K21005255),\ Aymen\ Berbache\ (K21074588).\n\ @version\ 28/03/22\n
comment1.params=
comment1.target=MainViewer()
comment1.text=\n\ Initialises\ and\ displays\ the\ MainViewer\n
comment10.params=paneToChangeTo
comment10.target=void\ addTopMinMaxBox(MainViewerPane)
comment10.text=\n\ Adds\ a\ minimum\ and\ maximum\ price\ selector\ combo\ box\ to\ the\ top\ right\ of\n\ the\ window\ if\ the\ pane\ requires\ it\ to.\n\ \n\ @param\ paneToChangeTo\ The\ pane\ that\ will\ be\ displayed\n
comment11.params=
comment11.target=void\ setButtonsDisabled()
comment11.text=\n\ Checks\ whether\ the\ panel\ switcher\ buttons\ should\ be\ disabled.\n
comment12.params=button\ index
comment12.target=void\ buttonDisablerForMapPane(javafx.scene.control.Button,\ int)
comment12.text=\n\ If\ the\ selected\ min\ and\ max\ price\ is\ not\ chosen,\ the\ next\ and\ previous\ \n\ pane\ buttons\ are\ disabled\ if\ the\ next\ or\ previous\ pane\ are\ the\ map\n\ respectively.\n\ \n\ @param\ button\ The\ button\ to\ disable.\n\ @param\ index\ The\ current\ index\ of\ paneOrder.\n
comment13.params=
comment13.target=javafx.scene.layout.HBox\ createMinMaxBox()
comment13.text=\n\ Creates\ two\ combo\ boxes\ allowing\ the\ user\ to\ select\ the\ minimum\ and\ \n\ price\ and\ confirm\ the\ selected\ options\ using\ a\ confirm\ button.\n\ \n\ @return\ HBox\ containing\ the\ minimum\ and\ maximum\ price\ combo\ boxes\ with\ a\ \n\ \ \ \ \ \ \ \ \ confirm\ button.\n
comment14.params=
comment14.target=void\ confirmButtonAction()
comment14.text=\n\ Switches\ the\ pane\ to\ the\ map\ pane\ if\ the\ confirm\ button\ is\ pressed\ and\ the\n\ requirements\ are\ met.\n
comment15.params=box\ confirm\ isMinBox
comment15.target=void\ getSelectionOfUser(javafx.scene.control.ComboBox,\ javafx.scene.control.Button,\ boolean)
comment15.text=\n\ Gets\ the\ current\ selection\ of\ the\ respective\ combobox\ and\ enables/disables\n\ the\ confirm\ button\ depending\ of\ the\ user's\ selection\n\ \n\ @param\ box\ The\ combobox\ to\ get\ the\ value\ selected.\n\ @param\ confirm\ The\ confirm\ button\ to\ enable/disable.\n\ @param\ isMinBox\ Indicates\ whether\ the\ box\ is\ the\ min\ price\ combobox.\n
comment16.params=box\ isMinBox
comment16.target=void\ getMinMaxBoxValue(javafx.scene.control.ComboBox,\ boolean)
comment16.text=\n\ Gets\ the\ user's\ selection\ of\ the\ referenced\ box.\n\ \n\ @param\ box\ The\ combobox\ to\ get\ the\ value\ selected\n\ @param\ isMinBox\ Indicates\ whether\ the\ box\ is\ the\ min\ price\ combobox.\n
comment17.params=confirm
comment17.target=void\ showStatus(javafx.scene.control.Button)
comment17.text=\n\ Checks\ whether\ the\ current\ min\ and\ max\ price\ selections\ fall\ within\ the\ \n\ specified\ paramaters\ and\ returns\ the\ corresponding\ status\ message.\n\ \n\ @param\ confirm\ The\ confirm\ button\ to\ change\ the\ status\ of.\n\ \n\ @return\ The\ current\ status\ message\ of\ the\ comparison\ between\ the\ comboboxes.\n
comment18.params=minMaxBox
comment18.target=javafx.scene.layout.HBox\ setInitialMinMaxBoxSelection(javafx.scene.layout.HBox)
comment18.text=\n\ Sets\ the\ initial\ value\ of\ the\ minimum\ and\ maximum\ comboboxes\ to\ fit\ the\n\ current\ selected\ minimum\ and\ maxium\ prices.\n\ \n\ @param\ minMaxBox\ The\ HBox\ containing\ the\ minimum\ and\ maximum\ comboboxes.\n\ \n\ @return\ A\ HBox\ containing\ the\ appropriate\ min\ and\ max\ price\ selections.\n
comment19.params=low\ high
comment19.target=java.util.ArrayList\ getPriceSelectionOptions(int,\ int)
comment19.text=\n\ Creates\ the\ list\ of\ all\ possible\ prices\ which\ can\ be\ selected.\n\ \n\ @param\ low\ The\ lowest\ price\ of\ all\ of\ the\ properties.\n\ @param\ high\ The\ highest\ price\ of\ all\ of\ the\ properties.\n\ \n\ @return\ An\ arraylist\ of\ all\ possible\ prices\ which\ can\ be\ selected.\n
comment2.params=
comment2.target=void\ makePaneSwitcherPane()
comment2.text=\n\ Initialises\ the\ buttons\ at\ the\ bottom\ corners\ of\ the\ window\ which\ are\ used\n\ to\ navigate\ between\ the\ different\ screens.\n
comment20.params=
comment20.target=void\ changeToPriceSelectorPane()
comment20.text=\n\ once\ called\ will\ display\ the\ price\ selection\ pane\n
comment21.params=
comment21.target=void\ changeToMapPane()
comment21.text=\n\ once\ called\ will\ display\ the\ map\ pane\n
comment22.params=
comment22.target=java.lang.Integer\ getSelectedMinPrice()
comment22.text=\n\ will\ return\ the\ current\ selected\ value\ of\ the\ min\ combo\ box\n\ @return\ if\ nothing\ is\ currently\ selected\ it\ will\ then\ return\ null\n
comment23.params=
comment23.target=java.lang.Integer\ getSelectedMaxPrice()
comment23.text=\n\ will\ return\ the\ current\ selected\ value\ of\ the\ max\ combo\ box\n\ @return\ if\ nothing\ is\ currently\ selected\ it\ will\ then\ return\ null\n
comment24.params=
comment24.target=javafx.scene.Scene\ getMainScene()
comment24.text=\n\ will\ return\ the\ current\ scene\n
comment25.params=openingStage\ parentStage
comment25.target=javafx.stage.Stage\ setStagePosititon(javafx.stage.Stage,\ javafx.stage.Stage)
comment25.text=\n\ Used\ to\ set\ the\ position\ of\ the\ new\ stage\ to\ be\ open\ to\ be\ at\ the\ same\n\ position\ as\ the\ parent\ stage\ is/was\ at.\n\ \n\ @param\ openingStage\ The\ stage\ to\ open.\n\ @param\ parentStage\ The\ stage\ which\ is\ opening\ the\ new\ stage.\n\ \n\ @return\ The\ new\ stage\ with\ the\ appropriate\ positioning.\n
comment3.params=
comment3.target=void\ goToPrevPane()
comment3.text=\n\ Used\ by\ the\ previous\ panel\ switcher\ button\ to\ switch\ to\ the\ next\ panel.\n
comment4.params=
comment4.target=void\ goToNextPane()
comment4.text=\n\ Used\ by\ the\ previous\ panel\ switcher\ button\ to\ switch\ to\ the\ next\ panel.\n
comment5.params=index\ list
comment5.target=int\ decreaseIndex(int,\ java.util.List)
comment5.text=\n\ Decreases\ the\ index\ and\ applies\ appropriate\ wrap\ around\ according\ to\ the\n\ list\ passed\ in.\n\ \n\ @param\ index\ The\ current\ index\ of\ the\ list.\n\ @param\ list\ The\ list\ that\ the\ index\ represents.\n\ \n\ @return\ The\ new\ decremented\ index\ number\ with\ appropriate\ wrap\ around\ applied.\n
comment6.params=index\ list
comment6.target=int\ increaseIndex(int,\ java.util.List)
comment6.text=\n\ Increases\ the\ index\ and\ applies\ appropriate\ wrap\ around\ according\ to\ the\n\ list\ passed\ in.\n\ \n\ @param\ index\ The\ current\ index\ of\ the\ list.\n\ @param\ list\ The\ list\ that\ the\ index\ represents.\n\ \n\ @return\ The\ new\ incremented\ index\ number\ with\ appropriate\ wrap\ around\ applied.\n
comment7.params=
comment7.target=void\ updateButtonText()
comment7.text=\n\ Updates\ the\ text\ of\ the\ next\ and\ previous\ pane\ buttons\n
comment8.params=newSceneIndex
comment8.target=void\ setPane(int)
comment8.text=\n\ Sets\ the\ pane\ according\ to\ the\ index\ passed\ in.\n\ \n\ @param\ newSceneIndex\ The\ index\ of\ the\ pane\ to\ set.\ \n
comment9.params=
comment9.target=void\ refreshPane()
comment9.text=\n\ Refreshes\ the\ pane\ by\ rebuilding\ the\ scene.\n
numComments=26
