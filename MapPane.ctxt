#BlueJ class context
comment0.target=MapPane
comment0.text=\n\ Displays\ the\ pane\ containing\ the\ map\ and\ some\ stats.\n\n\ @author\ Charles\ Suddens-Spiers\ (K21040272),\ Michael\ Higham\ (K21051343),\ \n\ \ \ \ \ \ \ \ \ Matthew\ Palmer\ (K21005255),\ Aymen\ Berbache\ (K21074588).\n\ @version\ 29/03/22\n
comment1.params=mainViewer
comment1.target=MapPane(MainViewer)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ MapPane\n\ \n\ @param\ MainViewer\ mainViewer\ -\ used\ to\ call\ methods\ within\ the\ MainViewer\n
comment10.params=
comment10.target=javafx.scene.layout.VBox\ createStatsPanel()
comment10.text=\n\ Creates\ the\ stats\ panel\ within\ the\ map\ pane\n\ \n\ @return\ A\ VBox\ containing\ the\ stats\ panel\n
comment11.params=
comment11.target=StatisticsViewer\ getStatisticsViewer()
comment12.params=
comment12.target=void\ showMoreStats()
comment12.text=\n\ Used\ by\ the\ 'Show\ More\ Stats\!'\ button\ to\ display\ the\ statistics\ viewer.\n
comment13.params=
comment13.target=void\ updateStats()
comment13.text=\n\ Updates\ the\ statistics\ viewer\ when\ the\ map\ is\ updated/selected\ price\ is\ changed.\n
comment14.params=grid
comment14.target=javafx.scene.layout.GridPane\ alignItemsInGridPane(javafx.scene.layout.GridPane)
comment14.text=\n\ Aligns\ all\ the\ nodes\ in\ the\ grid\ to\ be\ central.\n\ \n\ @param\ grid\ The\ gridPane\ to\ align\ the\ nodes\ of.\n\ \n\ @return\ GridPane\ The\ gridPane\ with\ aligned\ nodes.\n
comment15.params=
comment15.target=javafx.scene.layout.Pane\ getPane()
comment15.text=\n\ @return\ it\ will\ return\ type\ Pane\n
comment2.params=
comment2.target=void\ makePane()
comment2.text=\n\ Builds\ the\ map\ pane\n
comment3.params=
comment3.target=void\ makeHexagonMap()
comment3.text=\n\ Makes\ the\ borough\ hexagon\ map\n
comment4.params=hexagonWidth\ row\ gapSize
comment4.target=void\ createInsetRectangle(double,\ javafx.scene.layout.FlowPane,\ double)
comment4.text=\n\ Creates\ a\ transparent\ inset\ spacer\ half\ the\ size\ of\ a\ normal\ hexagon\n\ \n\ @param\ hexagonWidth\ The\ width\ of\ a\ hexagon\n\ @param\ row\ The\ row\ to\ add\ the\ inset\ to\n\ @param\ gapSize\ The\ size\ of\ the\ gaps\ between\ the\ hexagons\n
comment5.params=widthHeight
comment5.target=javafx.scene.shape.Rectangle\ createSpacerRectangle(int)
comment5.text=\n\ Creates\ a\ transparent\ rectangle\ of\ the\ size\ entered\ to\ be\ used\ as\ a\ spacer\n\ \n\ @param\ widthHeight\ The\ width\ and\ height\ of\ the\ rectangle.\n\ \n\ @return\ The\ rectangle\ to\ be\ used\ as\ a\ spacer\n
comment6.params=boroughName
comment6.target=void\ openPropertyViewer(java.lang.String)
comment6.text=\n\ Opens\ the\ property\ viewer\ for\ that\ borough\ and\ shows\ properties\ within\n\ the\ selected\ price\ range.\n\ \n\ @param\ boroughName\ The\ name\ of\ the\ borough\ to\ show\ the\ properties\ of.\n
comment7.params=hexagon\ boroughName\ heightWidth\ noOfPropertiesStats
comment7.target=javafx.scene.image.ImageView\ setHexagonFilledColour(javafx.scene.image.ImageView,\ java.lang.String,\ int,\ NoOfPropertiesStats)
comment7.text=\n\ Applies\ and\ adjusts\ the\ colour\ of\ the\ hexagon\ dependent\ on\ the\ borough's\ properties\n\ \n\ @param\ hexagon\ The\ hexagon\ image\ to\ adjust\ the\ colour\ of.\n\ @param\ boroughName\ The\ name\ of\ the\ borough\ to\ get\ the\ colour\ of.\n\ @param\ heightWidth\ The\ width\ and\ height\ of\ the\ hexagon.\n\ @param\ noOfPropertiesStats\ The\ stats\ pertaining\ to\ the\ overall\ boroughs.\n\ \n\ @return\ A\ filled\ hexagon\ with\ the\ correct\ colour\ applied.\n
comment8.params=hexagon\ heightWidth\ percentile
comment8.target=javafx.scene.image.ImageView\ setHexagonFilledColour(javafx.scene.image.ImageView,\ int,\ int)
comment8.text=\n\ Applies\ and\ adjusts\ the\ colour\ of\ the\ hexagon\ dependent\ on\ the\ percentile\n\ \n\ @param\ hexagon\ The\ hexagon\ image\ to\ adjust\ the\ colour\ of.\n\ @param\ heightWidth\ The\ width\ and\ height\ of\ the\ hexagon.\n\ @param\ percentile\ The\ percentile\ to\ get\ the\ colour\ of.\n\ \n\ @return\ A\ filled\ hexagon\ with\ the\ correct\ colour\ applied.\n
comment9.params=
comment9.target=javafx.scene.layout.GridPane\ createKey()
comment9.text=\n\ Creates\ the\ key\ panel\ within\ the\ map\ pane\n\ \n\ @return\ A\ GridPane\ containing\ the\ key\ panel\n
numComments=16
